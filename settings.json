// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
{
  "ssh_connections": [
    {
      "host": "github.com",
      "args": [],
      "projects": []
    }
  ],
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },

  //  editor settings
  "ui_font_size": 13,
  "ui_font_family": "MonoLisa",
  // Move all panel to the right
  "project_panel": {
    "button": true,
    "dock": "right",
    "git_status": true
  },
  "outline_panel": {
    "dock": "right"
  },
  "collaboration_panel": {
    "dock": "left"
  },
  // Move some unnecessary panels to the left
  "notification_panel": {
    "dock": "left"
  },

  // Agent, assistant, mcp
  "agent": {
    "profiles": {
      "ask": {
        "name": "Ask",
        "tools": {
          "contents": true,
          "diagnostics": true,
          "fetch": true,
          "list_directory": true,
          "project_notifications": false,
          "now": true,
          "find_path": true,
          "read_file": true,
          "open": true,
          "grep": true,
          "thinking": true,
          "web_search": true
        },
        "enable_all_context_servers": false,
        "context_servers": {
          "mcp-server-context7": {
            "tools": {
              "resolve-library-id": false,
              "get-library-docs": false
            }
          }
        }
      }
    },
    "always_allow_tool_actions": true,
    "default_profile": "write",
    "default_model": {
      "provider": "copilot_chat",
      "model": "claude-haiku-4.5"
    },
    "inline_assistant_model": {
      "provider": "copilot_chat",
      "model": "claude-haiku-4.5"
    },
    "inline_alternatives": [
      {
        "provider": "copilot_chat",
        "model": "gpt-5-mini"
      }
    ],
    "commit_message_model": {
      "provider": "copilot_chat",
      "model": "gpt-5-mini"
    },
    "dock": "left",
    "play_sound_when_agent_done": true,
    "use_modifier_to_send": true,
    "enable_feedback": false
  },
  "features": {
    "edit_prediction_provider": "zed"
  },
  // mcp
  "context_servers": {
    "opencode": {
      "source": "custom",
      "enabled": true,
      "command": "opencode",
      "args": ["acp"]
    },
    "open-code": {
      "source": "custom",
      "enabled": true,
      "command": "opencode",
      "args": ["acp"]
    },
    "OpenCode": {
      "source": "custom",
      "enabled": true,
      "command": "opencode",
      "args": ["acp"]
    },
    "mcp-server-context7": {
      "source": "extension",
      "enabled": true,
      "settings": {
        "context7_api_key": "{{CONTEXT7_API_KEY}}"
      }
    },
    "mcp-server-github": {
      "source": "extension",
      "settings": {
        "github_personal_access_token": "{{GITHUB_PERSONAL_ACCESS_TOKEN}}"
      }
    },
    "mcp-server-markitdown": {
      "source": "extension",
      "settings": {
        "package_version": "latest"
      }
    },
    "postgres-context-server": {
      "source": "extension",
      "settings": {
        "database_url": "{{DATABASE_URL}}"
      }
    },
    "playwright": {
      "source": "custom",
      "command": "npx",
      "args": ["-y", "@playwright/mcp@latest"]
    },
    "sentry": {
      "env": {},
      "source": "custom",
      "command": "npx",
      "args": ["-y", "mcp-remote@latest", "https://mcp.sentry.dev/mcp"]
    },
    "laravel-boost": {
      "source": "custom",
      "command": "php",
      "args": ["artisan", "boost:mcp"]
    }
  },
  // agent server
  "agent_servers": {
    "OpenCode": {
      "command": "opencode",
      "args": ["acp"]
    }
  },
  // editor canvas
  "buffer_font_size": 11,
  "buffer_font_family": "MonoLisa",
  "buffer_line_height": "comfortable",
  "base_keymap": "SublimeText",
  // "relative_line_numbers": true,
  "format_on_save": "on",
  // "vim_mode": true,

  // theme settings
  "theme": {
    "mode": "dark",
    "light": "Zedokai Light",
    "dark": "Zedokai Darker (Filter Spectrum)"
  },
  // icon, inherited basically from theme
  "icon_theme": "Zed (Default)",

  // terminal
  "terminal": {
    "detect_venv": {
      "on": {
        "directories": [".env", "env", ".venv", "venv"],
        "activate_script": "default"
      }
    },
    "font_family": "Fira Mono for Powerline"
  },

  // Finder model width
  "file_finder": {
    "modal_max_width": "medium"
  },

  // Indentation, rainbow indentation
  "indent_guides": {
    "enabled": true,
    "coloring": "indent_aware"
  },

  // Inlay hints preconfigured by Zed: Go, Rust, Typescript and Svelte
  "inlay_hints": {
    "enabled": true,
    "show_type_hints": true,
    "show_parameter_hints": true,
    "show_other_hints": true
  },

  // LSP Settings
  "lsp": {
    "tailwindcss-language-server": {
      "settings": {
        "class_attributes": ["class", "className", "ngClass", "styles"]
      }
    },
    "intelephense": {
      "initialization_options": {
        "enable": true,
        "license_key": "~/intelephense/licence.txt"
      }
    },
    "phptools": {
      "initialization_options": {
        "php.stubs": [
          "*",
          "zip",
          "zlib",
          "pcntl",
          "com",
          "composer",
          "wordpress"
        ]
      },
      "settings": {
        "completion.enable": true,
        "codeLens.enable": true,
        "enabled": true
      }
    },
    "phpactor": {
      "settings": {
        "language_server_worse_reflection.inlay_hints.enable": true
      }
    },
    "golangci-lint": {
      "initialization_options": {
        "command": [
          "golangci-lint",
          "run",
          "--output.json.path",
          "stdout",
          "--show-stats=false",
          "--output.text.path="
        ]
      }
    },
    "basedpyright": {
      "settings": {
        "python.analysis": {
          "diagnostic_mode": "workspace"
        },
        "python": {
          "python_path": ".venv/bin/python"
        }
      }
    }
  },
  // language settings
  "languages": {
    "PHP": {
      "language_servers": ["!intelephense", "phptools", "!phpactor"],
      "formatter": {
        "external": {
          "command": "bash",
          "arguments": [
            "-c",
            "cat > {buffer_path} && ./vendor/bin/pint --quiet {buffer_path} && cat {buffer_path}"
          ]
        }
      }
    },
    "TypeScript": {
      "inlay_hints": {
        "enabled": true,
        "show_parameter_hints": false,
        "show_other_hints": true,
        "show_type_hints": true
      },
      "formatter": {
        "external": {
          "command": "prettier",
          "arguments": ["--stdin-filepath", "{buffer_path}"]
        }
      },
      "format_on_save": "on"
    },
    "Python": {
      "format_on_save": "on",
      "language_servers": ["basedpyright", "ruff", "!pyright"]
    },
    "Go": {
      "language_servers": ["gopls", "golangci-lint"]
    }
  },

  "auto_install_extensions": {
    "php": true,
    "golangci-lint": true,
    "zedokai": true,
    "mcp-server-github": true,
    "mcp-server-markitdown": true,
    "postgres-context-server": true
  },

  "file_scan_exclusions": [
    "**/.git",
    "**/.svn",
    "**/.hg",
    "**/CVS",
    "**/.DS_Store",
    "**/Thumbs.db",
    "**/.classpath",
    "**/.settings",
    // above is default from Zed
    "**/out",
    "**/dist",
    "**/.husky",
    "**/.turbo",
    "**/.vscode-test",
    "**/.vscode",
    "**/.next",
    "**/.storybook",
    "**/.tap",
    "**/.nyc_output",
    "**/report",
    "**/node_modules",
    // for ai editor or agents
    "**/.opencode",
    "**/.claude",
    "**/.trae",
    "**/.cursor"
  ]
}
